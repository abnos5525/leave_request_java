# Application Properties
spring.application.name=spring-project
application.name=Spring Project
application.description=Spring Boot Project with Keycloak Integration
build.version=1.0.0
gateway.server.url=http://localhost:8080
spring.profiles.active=test

# Server Configuration
server.port=8080
server.servlet.context-path=/

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/camunda
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

spring.mvc.formcontent.putfilter.enabled=true

# Server Configuration
server.tomcat.max-threads=200
server.tomcat.max-connections=10000
server.tomcat.connection-timeout=5000

# Security Configuration
spring.security.user.name=admin
spring.security.user.password=admin
spring.security.user.roles=ADMIN

# Basic Authentication Configuration
basic.username=admin
basic.password=admin

# JWT Authentication Configuration
auth.client.id=${keycloak.resource}
auth.server.url=${keycloak.auth-server-url}
auth.realm=${keycloak.realm}
auth.client.secret=${keycloak.credentials.secret}
jwt.secret=mVA69N8h1e6NQii41uVfPtO4G3XT7laC

# Keycloak Configuration
keycloak.realm=spring-boot-realm
keycloak.auth-server-url=http://localhost:8081
keycloak.resource=spring-boot-app
keycloak.credentials.secret=mVA69N8h1e6NQii41uVfPtO4G3XT7laC
keycloak.public-client=false
keycloak.bearer-only=true
keycloak.ssl-required=external
keycloak.confidential-port=8443
keycloak.principal-attribute=preferred_username
keycloak.use-resource-role-mappings=true

# Keycloak Admin Credentials
keycloak.admin.username=admin
keycloak.admin.password=admin

# OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs

# Swagger Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/v3/api-docs
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true
springdoc.swagger-ui.filter=true

# Swagger UI OAuth2 Configuration
springdoc.swagger-ui.oauth.clientId=${keycloak.resource}
springdoc.swagger-ui.oauth.clientSecret=${keycloak.credentials.secret}
springdoc.swagger-ui.oauth.realm=${keycloak.realm}
springdoc.swagger-ui.oauth.authorizationUrl=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
springdoc.swagger-ui.oauth.tokenUrl=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
springdoc.swagger-ui.oauth2-redirect-url=http://localhost:8080/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=false
springdoc.swagger-ui.oauth.use-basic-authentication-with-access-code-grant=true
springdoc.swagger-ui.oauth.scopes=openid profile email roles
springdoc.swagger-ui.oauth.useBasicAuthenticationWithAccessCodeGrant=true
springdoc.swagger-ui.oauth.usePkceWithAuthorizationCodeGrant=false
springdoc.swagger-ui.oauth.useLocalStorage=true
springdoc.swagger-ui.oauth.additionalQueryStringParams.grant_type=password

# CORS Configuration
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=authorization,content-type,x-auth-token,origin,accept
spring.web.cors.exposed-headers=x-auth-token,authorization
spring.web.cors.max-age=3600
spring.web.cors.allow-credentials=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.example.spring_project=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.org.keycloak=DEBUG
logging.level.org.jboss.resteasy.client.jaxrs=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG
logging.level.org.springframework.security.oauth2=TRACE
logging.level.com.example.spring_project.security=TRACE
logging.level.org.springframework.security.oauth2.server.resource=TRACE
logging.level.org.springframework.security.oauth2.jwt=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Error handling
server.error.include-message=always
server.error.include-binding-errors=always

# Security OAuth2 Client Configuration
spring.security.oauth2.client.registration.keycloak.client-id=${keycloak.resource}
spring.security.oauth2.client.registration.keycloak.client-secret=${keycloak.credentials.secret}
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,roles
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.provider.keycloak.issuer-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}
spring.security.oauth2.client.provider.keycloak.authorization-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-uri=${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

# Enable Bean Definition Overriding
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true

#Camunda Configuration
camunda.bpm.enabled=true
camunda.bpm.process-engine.name=default
camunda.bpm.rest.enabled=true
camunda.bpm.rest.path=/engine-rest
camunda.bpm.webapp.enabled=true
camunda.bpm.webapp.application-path=/camunda
camunda.bpm.auto-deploy-resources=true
camunda.bpmn.deploy=true
camunda.bpm.history-level=full
camunda.bpm.job-execution.enabled=true
camunda.bpm.job-execution.deployment-aware=true
camunda.bpm.database.type=postgres
camunda.bpm.database.schema-update=true
camunda.bpm.rest.mapper.enabled=true
camunda.bpm.rest.mapper.path=/engine-rest
camunda.bpm.rest.mapper.port=8181
camunda.bpm.rest.mapper.context-path=/
camunda.bpm.rest.mapper.base-url=http://localhost:8181/engine-rest

camunda.metrics.reporter.enabled=false

# Camunda Admin User Configuration
camunda.bpm.admin-user.id=admin
camunda.bpm.admin-user.password=admin
camunda.bpm.admin-user.firstName=Admin
camunda.bpm.admin-user.lastName=Admin
camunda.bpm.admin-user.email=admin@example.com

# Disable CSRF for development
camunda.bpm.webapp.csrf.enabled=false
camunda.bpm.webapp.csrf.cookie.enabled=false

# Additional Spring Security Configuration
spring.security.filter.order=10
spring.security.filter.dispatcher-types=REQUEST,ASYNC,FORWARD,ERROR

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=lax
